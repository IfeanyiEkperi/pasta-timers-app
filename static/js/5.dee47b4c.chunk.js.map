{"version":3,"sources":["selectors/favorites.js","selectors/timers.js","components/Timer.js","selectors/producers.js","containers/Timers.js"],"names":["favoritesSelector","state","favorites","timersAsObjectSelector","timers","timersSelector","createSelector","timersObject","sortBy","map","timer","id","assign","name","useStyles","makeStyles","theme","button","width","avatar","backgroundColor","palette","primary","main","image","display","height","backgroundSize","backgroundPosition","icon","paddingLeft","spacing","paddingRight","time","alignItems","marginRight","Timer","title","subtitle","suptitle","label","link","onClick","classes","disableGutters","divider","className","href","target","rel","dangerouslySetInnerHTML","__html","jdenticon","secondary","classnames","disableRipple","disableFocusRipple","variant","size","edge","aria-label","producersSelector","uniq","producer","chip","opacity","text","marginTop","marginBottom","Preferences","t","useTranslation","dispatch","useDispatch","useSelector","producers","useState","searchValue","setSearchValue","selectValue","setSelectValue","length","TextField","placeholder","fullWidth","margin","InputLabelProps","shrink","value","onChange","e","Chip","key","color","component","clickable","List","dense","filteredTimers","filter","includes","toLowerCase","trim","isFavorite","line","url","removeFavorite","addFavorite","Typography","align","gutterBottom"],"mappings":"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","file":"static/js/5.dee47b4c.chunk.js","sourcesContent":["\nexport const favoritesSelector = state => state.favorites || []\n","import { createSelector } from 'reselect'\n\nimport { map, assign, sortBy } from 'lodash-es'\n\nexport const timersAsObjectSelector = state => state.timers || {}\n\nexport const timersSelector = createSelector(\n    timersAsObjectSelector,\n    timersObject => sortBy(map(timersObject, (timer, id) => assign(timer, { id: id })), timer => timer.name)\n)\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport classnames from 'classnames'\n\nimport * as jdenticon from \"jdenticon\"\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        width: \"100%\"\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    image: {\n        display: \"block\",\n        width: \"100%\",\n        height: \"100%\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"50% 50%\"\n    },\n    icon: {\n        paddingLeft: theme.spacing(0),\n        paddingRight: theme.spacing(0)\n    },\n    time: {\n        alignItems: \"baseline\",\n        \"& *\": {\n            marginRight: \"0.1em\"\n        }\n    }\n}))\n\nexport function Timer({\n    id = \"\",\n    title = \"\",\n    subtitle = \"\",\n    suptitle = \"\",\n    label = \"\",\n    link = \"#\",\n    time = 0,\n    icon,\n    onClick\n}) {\n\n    const classes = useStyles()\n\n    return (\n        <ListItem disableGutters divider title={`${suptitle} - ${title} - ${subtitle}`}>\n\n            <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                    <a\n                        className={classes.image}\n                        href={link}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        dangerouslySetInnerHTML={{__html: jdenticon.toSvg(id, 40)}}\n                    ></a>\n                </Avatar>\n            </ListItemAvatar>\n\n            <ListItemText primary={title} secondary={`${subtitle} - ${suptitle}`} />\n\n            <ListItemSecondaryAction>\n\n                <IconButton className={classnames(classes.icon, classes.time)} disableRipple disableFocusRipple>\n                    <Typography variant=\"h4\">{time}</Typography>\n                    {/*<Typography variant=\"subtitle2\">min</Typography>*/}\n                </IconButton>\n\n                <IconButton\n                    size=\"small\"\n                    className={classes.icon}\n                    edge=\"end\" aria-label=\"favorite\" title={label}\n                    onClick={onClick}\n                >\n                    {icon}\n                </IconButton>\n\n            </ListItemSecondaryAction>\n\n        </ListItem>\n    )\n}\n","import { createSelector } from 'reselect'\n\nimport { uniq, map, sortBy } from 'lodash-es'\n\nimport { timersSelector } from './timers'\n\nexport const producersSelector = createSelector(\n    timersSelector,\n    timers => sortBy(uniq(map(timers, timer => timer.producer)))\n)\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport classnames from 'classnames'\n\nimport { includes } from 'lodash-es'\n\nimport { useTranslation } from 'react-i18next'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport TextField from '@material-ui/core/TextField'\nimport Chip from '@material-ui/core/Chip'\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\n\nimport { ReactComponent as Logo } from '../logo.svg'\n\nimport { timersSelector } from '../selectors/timers'\nimport { favoritesSelector } from '../selectors/favorites'\nimport { producersSelector } from '../selectors/producers'\n\nimport {\n    addFavorite,\n    removeFavorite,\n} from '../actions'\n\nimport { Timer } from '../components/Timer'\n\nconst useStyles = makeStyles(theme => ({\n    chip: {\n        opacity: 0.5,\n        marginRight: theme.spacing(1),\n        \"&.active\": {\n            opacity: 1\n        }\n    },\n    text: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    },\n    icon: {\n        width: \"50%\",\n        marginTop: theme.spacing(6)\n    }\n}))\n\nexport default function Preferences() {\n\n    const classes = useStyles()\n\n    const { t } = useTranslation()\n\n    const dispatch = useDispatch()\n\n    const timers = useSelector(timersSelector)\n    const favorites = useSelector(favoritesSelector)\n    const producers = useSelector(producersSelector)\n\n    const [searchValue, setSearchValue] = useState(\"\")\n    const [selectValue, setSelectValue] = useState(\"\")\n\n    return (\n        timers.length\n        ?\n        <>\n            <TextField\n                label={t(\"timers.search\")}\n                className={classes.text}\n                placeholder={t(\"timers.example\")}\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                value={searchValue}\n                onChange={e => setSearchValue(e.target.value)}\n            />\n            {\n                producers\n                    .map(producer => (\n                        <Chip\n                            key={producer}\n                            className={classnames(classes.chip, producer === selectValue ? \"active\" : \"\")}\n                            color=\"primary\"\n                            label={producer} title={t(\"timers.select\")}\n                            component=\"a\" href={`#${producer}`} clickable\n                            onClick={e => setSelectValue(producer !== selectValue ? producer : \"\")}\n                        />\n                    ))\n            }\n            <List dense>\n                {\n                    (() => {\n\n                        let filteredTimers = timers\n                            .filter(timer => !(searchValue.length > (selectValue ? 0 : 2)) || includes(timer.name.toLowerCase(), searchValue.toLowerCase().trim()))\n                            .filter(timer => !selectValue || timer.producer === selectValue)\n\n                        return (\n                            filteredTimers.length && filteredTimers.length !== timers.length\n                            ?\n                            filteredTimers\n                                .map(timer => {\n                                    let isFavorite = includes(favorites, timer.id)\n                                    return (\n                                        <Timer\n                                            key={timer.id}\n                                            id={timer.id}\n                                            title={timer.name}\n                                            subtitle={timer.producer}\n                                            suptitle={timer.line}\n                                            label={isFavorite ? t(\"favorites.remove\") : t(\"favorites.add\")}\n                                            link={timer.url}\n                                            time={timer.time}\n                                            icon={isFavorite ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n                                            onClick={e => dispatch(isFavorite ? removeFavorite(timer.id) : addFavorite(timer.id))}\n                                        />\n                                    )\n                                })\n                            :\n                            <Typography align=\"center\" gutterBottom>\n                                <Logo className={classes.icon}/>\n                            </Typography>\n                        )\n                    })()\n                }\n            </List>\n        </>\n        :\n        <Typography align=\"center\" gutterBottom>\n            <Logo className={classes.icon}/>\n        </Typography>\n    )\n\n}\n"],"sourceRoot":""}