{"version":3,"sources":["config/api.js","sagas/index.js","schemas/index.js","reducers/timers.js","reducers/favorites.js","reducers/errors.js","reducers/index.js","config/store.js","i18n.js","components/Header.js","components/Footer.js","components/Loading.js","App.js","serviceWorker.js","index.js","config/constants.js","actions/index.js"],"names":["Api","request","axios","method","url","API_ENDPOINT","data","fetchTimers","timersFetchSaga","fetchFavorites","favoritesFetchSaga","updateFavorites","favoritesUpdateSaga","action","call","payload","response","localStorage","setItem","JSON","stringify","put","type","GET_TIMERS_RES_SUCCESS","responseData","getItem","parse","GET_TIMERS_RES_WARNING","message","GET_TIMERS_RES_ERROR","takeEvery","GET_TIMERS_REQ","GET_FAVORITES_SUCCESS","GET_FAVORITES_REQ","favorites","ADD_FAVORITE","REMOVE_FAVORITE","push","remove","el","timerSchema","schema","Entity","idAttribute","v","p","k","md5","producer","line","name","timersReducer","state","normalize","entities","timers","favoritesReducer","errorsReducer","RESET_ERRORS","history","createBrowserHistory","sagaMiddleware","createSagaMiddleware","store","createStore","combineReducers","errors","router","connectRouter","compose","applyMiddleware","routerMiddleware","run","i18n","use","initReactI18next","init","resources","it","translation","en","lng","interpolation","escapeValue","useStyles","makeStyles","theme","button","color","title","flexGrow","textDecoration","Header","classes","t","useTranslation","AppBar","position","Toolbar","IconButton","edge","aria-label","Icon","src","alt","Typography","variant","className","component","RouterLink","to","Footer","match","pages","React","useState","params","pageId","value","setValue","useEffect","includes","BottomNavigation","onChange","event","newValue","root","showLabels","BottomNavigationAction","label","icon","Loading","LinearProgress","Home","lazy","Timers","Favorites","Info","createMuiTheme","palette","primary","main","yellow","display","flexDirection","height","container","overflow","page","overflowY","paddingTop","App","dispatch","useDispatch","getTimers","getFavorites","ThemeProvider","fallback","Container","path","exact","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","CssBaseline","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","addFavorite","id","removeFavorite"],"mappings":"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","file":"static/js/main.9cda1c5f.chunk.js","sourcesContent":["import axios from 'axios'\n\nimport { API_ENDPOINT } from './constants'\n\nexport default function Api(request) {\n    return axios.request({\n        method: request.method || 'get',\n        url: `${API_ENDPOINT}${request.url || \"/\"}`,\n        data: request.data || {},\n    })\n}\n","import { call, put, takeEvery } from 'redux-saga/effects'\n\nimport { remove } from 'lodash-es'\n\nimport {\n    GET_TIMERS_REQ,\n    GET_TIMERS_RES_SUCCESS,\n    GET_TIMERS_RES_WARNING,\n    GET_TIMERS_RES_ERROR,\n    GET_FAVORITES_REQ,\n    GET_FAVORITES_SUCCESS,\n    ADD_FAVORITE,\n    REMOVE_FAVORITE,\n} from '../config/constants'\n\nimport Api from '../config/api'\n\nfunction* fetchTimers(action) {\n    try {\n        const response = yield call(Api, action.payload)\n        if (response.data) {\n            localStorage.setItem('timers', JSON.stringify(response.data))\n        }\n        yield put({ type: GET_TIMERS_RES_SUCCESS, payload: response.data })\n    } catch (e) {\n        const responseData = localStorage.getItem('timers')\n        if (responseData) {\n            yield put({ type: GET_TIMERS_RES_SUCCESS, payload: JSON.parse(responseData) })\n            yield put({ type: GET_TIMERS_RES_WARNING, payload: e.message })\n        } else {\n            yield put({ type: GET_TIMERS_RES_ERROR, message: e.message })\n        }\n    }\n}\n\nexport function* timersFetchSaga() {\n    yield takeEvery(GET_TIMERS_REQ, fetchTimers)\n}\n\nfunction* fetchFavorites(action) {\n    const responseData = localStorage.getItem('favorites')\n    if (responseData) {\n        yield put({ type: GET_FAVORITES_SUCCESS, payload: JSON.parse(responseData) })\n    }\n}\n\nexport function* favoritesFetchSaga() {\n    yield takeEvery(GET_FAVORITES_REQ, fetchFavorites)\n}\n\nfunction* updateFavorites(action) {\n    const favorites = JSON.parse(localStorage.getItem('favorites') || \"[]\")\n    if (action.payload) {\n        switch(action.type) {\n            case ADD_FAVORITE:\n                favorites.push(action.payload)\n                break\n            case REMOVE_FAVORITE:\n                remove(favorites, el => el === action.payload)\n                break\n            default:\n        }\n    }\n    localStorage.setItem('favorites', JSON.stringify(favorites))\n    yield put({ type: GET_FAVORITES_SUCCESS, payload: favorites })\n}\n\nexport function* favoritesUpdateSaga() {\n    yield takeEvery([ADD_FAVORITE, REMOVE_FAVORITE], updateFavorites)\n}\n","import md5 from 'md5'\n\nimport { schema } from 'normalizr'\n\nexport const timerSchema = new schema.Entity('timers', {}, { idAttribute: (v,p,k) => md5(`${v.producer}-${v.line}-${v.name}`) })\n","import { normalize } from 'normalizr'\n\nimport { GET_TIMERS_RES_SUCCESS } from '../config/constants'\n\nimport { timerSchema } from '../schemas'\n\nexport default function timersReducer(state = [], action) {\n    switch (action.type) {\n        case GET_TIMERS_RES_SUCCESS:\n            return action.payload ? normalize(action.payload, [timerSchema]).entities.timers : state\n        default:\n            return state\n    }\n}\n","import { GET_FAVORITES_SUCCESS } from '../config/constants'\n\nexport default function favoritesReducer(state = [], action) {\n    switch (action.type) {\n        case GET_FAVORITES_SUCCESS:\n            return action.payload || state\n        default:\n            return state\n    }\n}\n","import {\n    GET_TIMERS_RES_WARNING,\n    GET_TIMERS_RES_ERROR,\n    RESET_ERRORS\n} from '../config/constants'\n\nexport default function errorsReducer(state = {}, action) {\n    switch (action.type) {\n        case GET_TIMERS_RES_WARNING:\n            return action.payload ? { \"type\": \"warning\", \"message\": action.payload } : state\n        case GET_TIMERS_RES_ERROR:\n            return action.payload ? { \"type\": \"error\", \"message\": action.payload } : state\n        case RESET_ERRORS:\n            return {}\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport timersReducer from './timers'\nimport favoritesReducer from './favorites'\nimport errorsReducer from './errors'\n\nexport default (history) => combineReducers({\n    timers: timersReducer,\n    favorites: favoritesReducer,\n    errors: errorsReducer,\n    router: connectRouter(history),\n})\n","import { createBrowserHistory } from 'history'\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\nimport createSagaMiddleware from 'redux-saga'\n\nimport {\n    timersFetchSaga,\n    favoritesFetchSaga,\n    favoritesUpdateSaga\n} from '../sagas'\n\nimport createRootReducer from '../reducers'\n\nexport const history = createBrowserHistory()\nconst sagaMiddleware = createSagaMiddleware()\n\nexport const store = createStore(\n    createRootReducer(history),\n    {},\n    compose(\n        applyMiddleware(\n            routerMiddleware(history),\n            sagaMiddleware,\n        )\n    )\n)\n\n//store.subscribe(() => console.log(\"store\", store.getState()))\n\nsagaMiddleware.run(timersFetchSaga)\nsagaMiddleware.run(favoritesFetchSaga)\nsagaMiddleware.run(favoritesUpdateSaga)\n","import i18n from \"i18next\"\nimport { initReactI18next } from \"react-i18next\"\n\nimport it from './locales/it.json'\nimport en from './locales/en.json'\n\ni18n\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources: {\n            it: { translation: it },\n            en: { translation: en }\n        },\n\n        lng: 'it',\n\n        interpolation: {\n            escapeValue: false // react already safes from xss\n        }\n    })\n\nexport default i18n\n","import React from 'react'\nimport { Link as RouterLink } from \"react-router-dom\"\n\nimport { useTranslation } from 'react-i18next'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Icon from '@material-ui/core/Icon'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport InfoIcon from '@material-ui/icons/Info'\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color: \"white\",\n    },\n    title: {\n        flexGrow: 1,\n        color: \"white\",\n        textDecoration: \"none\"\n    },\n}))\n\nexport default function Header() {\n\n    const classes = useStyles()\n\n    const { t } = useTranslation()\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <IconButton\n                    edge=\"start\" color=\"inherit\" aria-label=\"logo\" title=\"logo\"\n                >\n                    <Icon><img src=\"logo.svg\" alt=\"logo\" /></Icon>\n                </IconButton>\n                <Typography\n                    variant=\"h6\" className={classes.title}\n                    component={RouterLink} to={`/`}\n                >\n                    Pasta Timers\n                </Typography>\n                <IconButton\n                    edge=\"end\" className={classes.button} aria-label=\"info\" title={t('info')}\n                    component={RouterLink} to={`/info`}\n                >\n                    <InfoIcon />\n                </IconButton>\n            </Toolbar>\n        </AppBar>\n    )\n\n}\n","import React, { useEffect } from 'react'\nimport { Link as RouterLink } from \"react-router-dom\"\n\nimport { useTranslation } from 'react-i18next'\n\nimport { includes } from 'lodash-es'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\n\nimport TimerIcon from '@material-ui/icons/Timer'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\n\nconst useStyles = makeStyles({\n})\n\nexport default function Footer({ match }) {\n\n    const classes = useStyles()\n\n    const { t } = useTranslation()\n\n    const pages = [\"timers\",\"favorites\"]\n\n    const [value, setValue] = React.useState(match.params.pageId || \"\")\n\n    useEffect(() => {\n        if (includes(pages, match.params.pageId)) {\n            setValue(match.params.pageId)\n        } else {\n            setValue(\"\")\n        }\n    }, [match, pages])\n\n    return (\n        <BottomNavigation\n            value={value}\n            onChange={(event, newValue) => {\n                setValue(newValue)\n            }}\n            className={classes.root}\n            showLabels\n        >\n            <BottomNavigationAction\n                label={t('timers.title')} value=\"timers\" icon={<TimerIcon />}\n                component={RouterLink} to={`/timers`}\n            />\n            <BottomNavigationAction\n                label={t('favorites.title')} value=\"favorites\" icon={<FavoriteIcon />}\n                component={RouterLink} to={`/favorites`}\n            />\n        </BottomNavigation>\n    )\n}\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n})\n\nexport default function Loading() {\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <LinearProgress />\n        </div>\n    );\n}\n","import React, { useEffect, lazy, Suspense } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { yellow } from '@material-ui/core/colors'\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Loading from './components/Loading'\n\nimport { getTimers, getFavorites } from './actions'\n\nconst Home = lazy(() => import('./containers/Home'))\nconst Timers = lazy(() => import('./containers/Timers'))\nconst Favorites = lazy(() => import('./containers/Favorites'))\nconst Info = lazy(() => import('./containers/Info'))\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: { main: yellow[700] }\n    },\n})\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n    },\n    container: {\n        flexGrow: 1,\n        overflow: 'hidden'\n    },\n    page: {\n        height: '100%',\n        overflowY: 'auto',\n        paddingTop: \"1.5em\"\n    }\n}))\n\nfunction App() {\n\n    const classes = useStyles()\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getTimers())\n        dispatch(getFavorites())\n    }, [dispatch])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.root}>\n                <Header />\n                <Suspense fallback={<Loading />}>\n                    <Container className={classes.container}>\n                        <div className={classes.page}>\n                            <Switch>\n                                <Route path=\"/\" exact component={Home} />\n                                <Route path=\"/timers\" exact component={Timers} />\n                                <Route path=\"/favorites\" exact component={Favorites} />\n                                <Route path=\"/info\" exact component={Info} />\n                            </Switch>\n                        </div>\n                    </Container>\n                </Suspense>\n                <Route path=\"/:pageId?\" component={Footer} />\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport { store, history } from './config/store'\n\nimport './i18n'\n\nimport { CssBaseline } from '@material-ui/core'\n\nimport './index.css'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <BrowserRouter>\n                <CssBaseline />\n                <App />\n            </BrowserRouter>\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n","export const GET_TIMERS_REQ = 'GET_TIMERS_REQ'\nexport const GET_TIMERS_RES_SUCCESS = 'GET_TIMERS_RES_SUCCESS'\nexport const GET_TIMERS_RES_WARNING = 'GET_TIMERS_RES_WARNING'\nexport const GET_TIMERS_RES_ERROR = 'GET_TIMERS_RES_ERROR'\n\nexport const GET_FAVORITES_REQ = 'GET_FAVORITES_REQ'\nexport const GET_FAVORITES_SUCCESS = 'GET_FAVORITES_SUCCESS'\nexport const ADD_FAVORITE = 'ADD_FAVORITE'\nexport const REMOVE_FAVORITE = 'REMOVE_FAVORITE'\n\nexport const RESET_ERRORS = 'RESET_ERRORS'\n\nexport const API_ENDPOINT = '.'","import {\n    GET_TIMERS_REQ,\n    GET_FAVORITES_REQ,\n    ADD_FAVORITE,\n    REMOVE_FAVORITE,\n} from '../config/constants'\n\nexport function getTimers() {\n    return { type: GET_TIMERS_REQ, payload: { url: \"/timers.json\" } }\n}\n\nexport function getFavorites() {\n    return { type: GET_FAVORITES_REQ }\n}\n\nexport function addFavorite(id) {\n    return { type: ADD_FAVORITE, payload: id }\n}\n\nexport function removeFavorite(id) {\n    return { type: REMOVE_FAVORITE, payload: id }\n}\n"],"sourceRoot":""}