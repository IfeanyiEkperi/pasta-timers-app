{"version":3,"sources":["selectors/favorites.js","selectors/timers.js","components/Timer.js","containers/Favorites.js"],"names":["favoritesSelector","state","favorites","timersAsObjectSelector","timers","timersSelector","createSelector","timersObject","sortBy","map","timer","id","assign","name","useStyles","makeStyles","theme","button","width","avatar","backgroundColor","palette","primary","main","image","display","height","backgroundSize","backgroundPosition","icon","paddingLeft","spacing","paddingRight","time","alignItems","marginRight","Timer","title","subtitle","suptitle","label","link","onClick","classes","disableGutters","divider","className","href","target","rel","dangerouslySetInnerHTML","__html","jdenticon","secondary","classnames","disableRipple","disableFocusRipple","variant","size","edge","aria-label","Preferences","t","useTranslation","dispatch","useDispatch","timersAsObject","useSelector","length","dense","isFavorite","includes","key","line","producer","url","e","removeFavorite","addFavorite","to"],"mappings":"kHACA,kCAAO,IAAMA,EAAoB,SAAAC,GAAK,OAAIA,EAAMC,WAAa,K,iCCD7D,4GAIaC,EAAyB,SAAAF,GAAK,OAAIA,EAAMG,QAAU,IAElDC,EAAiBC,YAC1BH,GACA,SAAAI,GAAY,OAAIC,YAAOC,YAAIF,GAAc,SAACG,EAAOC,GAAR,OAAeC,YAAOF,EAAO,CAAEC,GAAIA,QAAQ,SAAAD,GAAK,OAAIA,EAAMG,Y,iCCRvG,yJAeMC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,OAAQ,CACJC,MAAO,QAEXC,OAAQ,CACJC,gBAAiBJ,EAAMK,QAAQC,QAAQC,MAE3CC,MAAO,CACHC,QAAS,QACTP,MAAO,OACPQ,OAAQ,OACRC,eAAgB,QAChBC,mBAAoB,WAExBC,KAAM,CACFC,YAAad,EAAMe,QAAQ,GAC3BC,aAAchB,EAAMe,QAAQ,IAEhCE,KAAM,CACFC,WAAY,WACZ,MAAO,CACHC,YAAa,cAKlB,SAASC,EAAT,GAUH,IAAD,IATCzB,UASD,MATM,GASN,MARC0B,aAQD,MARS,GAQT,MAPCC,gBAOD,MAPY,GAOZ,MANCC,gBAMD,MANY,GAMZ,MALCC,aAKD,MALS,GAKT,MAJCC,YAID,MAJQ,IAIR,MAHCR,YAGD,MAHQ,EAGR,EAFCJ,EAED,EAFCA,KACAa,EACD,EADCA,QAGMC,EAAU7B,IAEhB,OACI,kBAAC,IAAD,CAAU8B,gBAAc,EAACC,SAAO,EAACR,MAAK,UAAKE,EAAL,cAAmBF,EAAnB,cAA8BC,IAEhE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQQ,UAAWH,EAAQxB,QACvB,uBACI2B,UAAWH,EAAQnB,MACnBuB,KAAMN,EACNO,OAAO,SACPC,IAAI,sBACJC,wBAAyB,CAACC,OAAQC,QAAgBzC,EAAI,SAKlE,kBAAC,IAAD,CAAcW,QAASe,EAAOgB,UAAS,UAAKf,EAAL,cAAmBC,KAE1D,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAYO,UAAWQ,IAAWX,EAAQd,KAAMc,EAAQV,MAAOsB,eAAa,EAACC,oBAAkB,GAC3F,kBAAC,IAAD,CAAYC,QAAQ,MAAMxB,IAI9B,kBAAC,IAAD,CACIyB,KAAK,QACLZ,UAAWH,EAAQd,KACnB8B,KAAK,MAAMC,aAAW,WAAWvB,MAAOG,EACxCE,QAASA,GAERb,O,iCCrFrB,6LAsBe,SAASgC,IAAe,IAE3BC,EAAMC,cAAND,EAEFE,EAAWC,cAEXC,EAAiBC,YAAYhE,KAC7BD,EAAYiE,YAAYnE,KAE9B,OACIE,EAAUkE,OAEV,kBAAC,IAAD,CAAMC,OAAK,GAEHnE,EACKO,KAAI,SAAAE,GAAE,OAAIC,YAAOsD,EAAevD,GAAK,CAAEA,GAAIA,OAC3CF,KAAI,SAAAC,GACD,IAAI4D,EAAaC,YAASrE,EAAWQ,EAAMC,IAC3C,OACI,kBAAC,IAAD,CACI6D,IAAK9D,EAAMC,GACXA,GAAID,EAAMC,GACV0B,MAAO3B,EAAMG,KACb0B,SAAU7B,EAAM+D,KAChBnC,SAAU5B,EAAMgE,SAChBlC,MAAoBsB,EAAbQ,EAAe,mBAAwB,iBAC9C7B,KAAM/B,EAAMiE,IACZ1C,KAAMvB,EAAMuB,KACZJ,KAAMyC,EAAa,kBAAC,IAAD,MAAmB,kBAAC,IAAD,MACtC5B,QAAS,SAAAkC,GAAC,OAAIZ,EAASM,EAAaO,YAAenE,EAAMC,IAAMmE,YAAYpE,EAAMC,YAOzG,kBAAC,IAAD,CAAUoE,GAAI","file":"static/js/4.5d04d2d5.chunk.js","sourcesContent":["\nexport const favoritesSelector = state => state.favorites || []\n","import { createSelector } from 'reselect'\n\nimport { map, assign, sortBy } from 'lodash-es'\n\nexport const timersAsObjectSelector = state => state.timers || {}\n\nexport const timersSelector = createSelector(\n    timersAsObjectSelector,\n    timersObject => sortBy(map(timersObject, (timer, id) => assign(timer, { id: id })), timer => timer.name)\n)\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport classnames from 'classnames'\n\nimport * as jdenticon from \"jdenticon\"\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        width: \"100%\"\n    },\n    avatar: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    image: {\n        display: \"block\",\n        width: \"100%\",\n        height: \"100%\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"50% 50%\"\n    },\n    icon: {\n        paddingLeft: theme.spacing(0),\n        paddingRight: theme.spacing(0)\n    },\n    time: {\n        alignItems: \"baseline\",\n        \"& *\": {\n            marginRight: \"0.1em\"\n        }\n    }\n}))\n\nexport function Timer({\n    id = \"\",\n    title = \"\",\n    subtitle = \"\",\n    suptitle = \"\",\n    label = \"\",\n    link = \"#\",\n    time = 0,\n    icon,\n    onClick\n}) {\n\n    const classes = useStyles()\n\n    return (\n        <ListItem disableGutters divider title={`${suptitle} - ${title} - ${subtitle}`}>\n\n            <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                    <a\n                        className={classes.image}\n                        href={link}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        dangerouslySetInnerHTML={{__html: jdenticon.toSvg(id, 40)}}\n                    ></a>\n                </Avatar>\n            </ListItemAvatar>\n\n            <ListItemText primary={title} secondary={`${subtitle} - ${suptitle}`} />\n\n            <ListItemSecondaryAction>\n\n                <IconButton className={classnames(classes.icon, classes.time)} disableRipple disableFocusRipple>\n                    <Typography variant=\"h4\">{time}</Typography>\n                    {/*<Typography variant=\"subtitle2\">min</Typography>*/}\n                </IconButton>\n\n                <IconButton\n                    size=\"small\"\n                    className={classes.icon}\n                    edge=\"end\" aria-label=\"favorite\" title={label}\n                    onClick={onClick}\n                >\n                    {icon}\n                </IconButton>\n\n            </ListItemSecondaryAction>\n\n        </ListItem>\n    )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Redirect } from \"react-router-dom\"\n\nimport { includes, assign } from 'lodash-es'\n\nimport { useTranslation } from 'react-i18next'\n\nimport List from '@material-ui/core/List'\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\n\nimport { timersAsObjectSelector } from '../selectors/timers'\nimport { favoritesSelector } from '../selectors/favorites'\n\nimport {\n    addFavorite,\n    removeFavorite,\n} from '../actions'\n\nimport { Timer } from '../components/Timer'\n\nexport default function Preferences() {\n\n    const { t } = useTranslation()\n\n    const dispatch = useDispatch()\n\n    const timersAsObject = useSelector(timersAsObjectSelector)\n    const favorites = useSelector(favoritesSelector)\n\n    return (\n        favorites.length\n        ?\n        <List dense>\n            {\n                favorites\n                    .map(id => assign(timersAsObject[id], { id: id }))\n                    .map(timer => {\n                        let isFavorite = includes(favorites, timer.id)\n                        return (\n                            <Timer\n                                key={timer.id}\n                                id={timer.id}\n                                title={timer.name}\n                                suptitle={timer.line}\n                                subtitle={timer.producer}\n                                label={isFavorite ? t(\"favorites.remove\") : t(\"favorites.add\")}\n                                link={timer.url}\n                                time={timer.time}\n                                icon={isFavorite ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n                                onClick={e => dispatch(isFavorite ? removeFavorite(timer.id) : addFavorite(timer.id))}\n                            />\n                        )\n                    })\n            }\n        </List>\n        :\n        <Redirect to={\"/timers\"} />\n    )\n\n}\n"],"sourceRoot":""}